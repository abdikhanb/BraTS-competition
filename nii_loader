import os 
import numpy as np

from nibabel.testing import data_path

example_filename = os.path.join(data_path, 'example4d.nii.gz')

import nibabel as nib
img = nib.load(example_filename)

print(f"Image shape is {img.shape})
print("Image datatype is", img.get_data_dtype() == np.dtype(np.int16))

print("Image affine transformation is", img.affine.shape)

data = img.get_fdata()
data.shape
type(data)

# Accessing all NIfTI-specific information
hdr = img.header
hdr.get_xyzt_units()

# Access to raw header information
raw =hdf.structarr
raw['xyzt_units']

# Creating new imag in some file format. 
import numpy as np
data = np.ones((32, 32, 15, 100), dtype=np.int16)
img = nib.NiftiliImage(data, np.eye(4))
img.get_data_dtype() == np.dtype(np.int16)
img.header.get_xyzt_units()

# Saving this new images to a file
nib.save(img, os.path.join('build', 'test4d.nii.gz'))
